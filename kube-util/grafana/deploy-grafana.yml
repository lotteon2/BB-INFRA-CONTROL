apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-deployment
  namespace: prod
  labels:
    app: grafana
spec:
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      nodeSelector:
        nodegroup: cloud5
      securityContext:
        runAsUser: 0
      containers:
        - name: grafana
          image: grafana/grafana:latest
          ports:
            - containerPort: 3000
          volumeMounts:
            - name: grafana-data
              mountPath: /var/lib/grafana/
          resources:
            requests:
              memory: "350Mi"
              cpu: "250m"
            limits:
              memory: "400Mi"
              cpu: "300m"
      volumes:
        - name: grafana-data
          persistentVolumeClaim:
            claimName: grafana-data-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  namespace: prod
  annotations:
    alb.ingress.kubernetes.io/healthcheck-path: /api/health
  labels:
    app: grafana
spec:
  type: NodePort
  selector:
    app: grafana
  ports:
    - port: 3000
      targetPort: 3000
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: grafana-data-pv
  namespace: prod
  labels:
    app: grafana-data-pv
spec:
  storageClassName: ""
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /mnt/c/data/grafana-data
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-data-pvc
  namespace: prod
spec:
  volumeName: grafana-data-pv
  storageClassName: ""
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
data:
  grafana.ini: |
    root_url = %(protocol)s://%(domain)s:%(http_port)s/grafana/
  
    # Enable anonymous access.
    [auth.anonymous]
    enabled = true
  
    # Configure Prometheus as a data source.
    [[datasource]]
    name = Prometheus
    type = prometheus
    url = http://prometheus-service:9090
    access = proxy
    is_default = true